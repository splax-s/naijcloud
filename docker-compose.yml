version: '3.8'

services:
  # Infrastructure Services
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: naijcloud
      POSTGRES_USER: naijcloud
      POSTGRES_PASSWORD: naijcloud_pass
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=en_US.UTF-8 --lc-ctype=en_US.UTF-8"
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./control-plane/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U naijcloud -d naijcloud"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Observability Stack
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./observability/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    depends_on:
      - control-plane
      # - edge-proxy

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./observability/grafana/provisioning:/etc/grafana/provisioning
      - ./observability/grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - prometheus

  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    volumes:
      - ./observability/loki-config.yml:/etc/loki/local-config.yaml
    command: -config.file=/etc/loki/local-config.yaml

  # Mailhog for Email Testing
  # mailhog:
  #   image: mailhog/mailhog:latest
  #   ports:
  #     - "1025:1025"  # SMTP port
  #     - "8025:8025"  # Web UI port
  #   networks:
  #     - naijcloud-network

  # Application Services
  control-plane:
    build:
      context: ./control-plane
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
      - "9091:9091"
    environment:
      - DATABASE_URL=postgres://naijcloud:naijcloud_pass@postgres:5432/naijcloud?sslmode=disable
      - REDIS_URL=redis://redis:6379/0
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - PORT=8080
      - METRICS_PORT=9091
      - LOG_LEVEL=info
      - SMTP_HOST=localhost
      - SMTP_PORT=587
      - SMTP_USER=
      - SMTP_PASSWORD=
      - SMTP_FROM=noreply@naijcloud.dev
      - FRONTEND_URL=http://localhost:3001
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Edge Proxy Service
  edge-proxy:
    build:
      context: ./edge-proxy
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
      - "9092:9092"  # metrics port
    environment:
      - CONTROL_PLANE_URL=http://control-plane:8080
      - REDIS_URL=redis://redis:6379
      - LOG_LEVEL=debug
      - REGION=local-dev
      - CACHE_SIZE=100MB
    depends_on:
      control-plane:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9092/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # dashboard:
  #   build:
  #     context: ./dashboard
  #     dockerfile: Dockerfile
  #   ports:
  #     - "3001:3000"
  #   environment:
  #     - NEXT_PUBLIC_API_URL=http://localhost:8080/v1
  #     - NEXTAUTH_SECRET=dev-secret-change-in-prod
  #     - NEXTAUTH_URL=http://localhost:3001
  #   depends_on:
  #     - control-plane

volumes:
  postgres_data:
  redis_data:
  grafana_data:

networks:
  default:
    name: naijcloud-network
